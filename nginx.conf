user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    # Enable sending file in parts
    sendfile on;
    
    # Allow HTTP Range requests, which are needed for seeking within a video
    # This is usually enabled by default, but just in case:
    ignore_invalid_headers on;

    # Increase client max body size to allow large video uploads, if needed
    client_max_body_size 0;  # '0' means no limit

    # Increase buffer sizes for larger responses
    output_buffers 1 512k;
    postpone_output 1460;
    proxy_cache_path /cached/ levels=1:2 keys_zone=transcode_cache:10m min_free=10g inactive=1d use_temp_path=off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_user "$request" '
                      '$status $body_bytes_sent';

    access_log  /var/log/nginx/access.log  main;

    server {
        listen       80;
        # server_name  localhost;
        location ~ ^/stream/(.*)$ {
            proxy_pass http://127.0.0.1:3001$request_uri;
            error_log /dev/stdout;
            access_log /dev/stdout main;
            # Disable client cache
            add_header Cache-Control "no-cache";
            # Enable seeking in video
            # proxy_http_version 1.1;
            proxy_set_header Range $http_range;
            # proxy_set_header Connection "";
            # proxy_set_header Host $host;
            
            # 
            slice 1m;
            # add_header Accept-Ranges bytes;
            proxy_buffering off;
            proxy_cache transcode_cache;
            proxy_cache_valid 200 1d;
        }

        location / {
            proxy_pass http://127.0.0.1:3001$request_uri;
            error_log /var/log/nginx/error.log;
            access_log off;
        }
    }
}